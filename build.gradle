plugins {
    id 'java-library'
    id 'maven-publish' // JitPack reads this to publish your AAR/JAR
}

// JitPack expects: com.github.<GitHubUserOrOrg>:<RepoOrModule>:<Tag>
// Let JitPack override via -Pgroup/-Pversion, but provide sane defaults for local builds.
group    = findProperty("group")   ?: "com.github.arunsingh8775"
version  = findProperty("version") ?: "0.0.0"    // JitPack replaces with your Git tag (e.g., v1.0.0)
description = "Order Tracking Common"

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

ext {
    jacksonVersion = '2.17.2'
    lombokVersion  = '1.18.32'
    junitVersion   = '5.10.3'
}

dependencies {
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
}

tasks.test {
    useJUnitPlatform()
}

// Optional: silence strict Javadoc warnings on JDK 17
tasks.withType(Javadoc).configureEach {
    options.addBooleanOption('Xdoclint:none', true)
    options.addStringOption('encoding', 'UTF-8')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'order-tracking-common'
                description = 'Shared models/DTOs/events for Order Tracking microservices'
            }
        }
    }
    // ‚ùå Do NOT declare a repository for JitPack.
    // JitPack will build from source and serve the artifact automatically.
}
